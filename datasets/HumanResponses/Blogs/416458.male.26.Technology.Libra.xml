<Blog>

<date>07,December,2001</date>
<post>

	 
      Hello all,  This is me.....for what it's worth.  I am a Senior Developer at a small web development firm in central London, and this is my life.....for what it's worth....
     

    
</post>

<date>10,December,2001</date>
<post>

	 
      Go here,  urlLink wedgey's homepage , this is one of the most adictive java applet games I've ever played. It's currently stopping any work from going on in the office. :)
     

    
</post>

<date>25,April,2003</date>
<post>

	 
      Apple had $4.53 billion in cash, cash equivalents and short-term investments on its balance sheet at the end of the most recent quarter.  from  urlLink http://story.news.yahoo.com/news?tmpl=story&cid=582&ncid=582&e=3&u=/nm/20030424/wr_nm/tech_apple_dc  ... quite shocking.
     

    
</post>

<date>16,July,2003</date>
<post>

	 
      Interesting site, talks about standard parameter names for forms  urlLink IETF ECML (Electronic Commerce Modelling Language). 
     

    
</post>

<date>23,July,2003</date>
<post>

	 
      I have seen the light, and it is  urlLink XHTML 2.0 . I have, for some time, been quite despondant about the future of the internet, especially with regards to the lack of forward motion from W3C and IETF about sorting things out. Now this may have stemmed from my dislike for RDF and the lack of a decent roadmap for the acceptance of IPv6, but there you go.  Anyway, I now know better and that the future is all about XHTML. This standard rocks my world. I've been annoying my workmates since I downloaded it, always saying things like "This will be so much easier when we get XHTML". This annoys them becuase they are, on the whole, far more sensible than me and know that it'll be a good 5 years before we can actually build sites using this stuff. But I am still a happy bunny, because I can now relax in the knowledge that the right people are working towards the right goals. If you have any interest in websites then you should check this out right now, while there is still a call for public comment.   p.s. I have to admit that a small part of me, honestly a very small part, likes this because I know how much it's going to freak out web designers! :) 
     

    
</post>

<date>20,December,2003</date>
<post>

	 
      So I'm sitting here at work on a Saturday reading Kieron's blog. I'm not a great blog reader, or in fact poster as you can tell, but Kieron is a mate and I found his blog by accident which makes it more fun to read.  Anyway he's been posting thoughts on the turn of the year and it's something that's always plays on my mind. I guess I'm far too fucking introspective for my own good, but then it's a hobby that you can do anytime, amyplace which is always nice. So how's this year been? Well....  ... it's been the "Year of the Matt". Now don't get me wrong, it's not some massive ego trip, quite the opposite. The previous year had been soooo bad that I felt I had to do something big to turn things around. It all started last New Years Eve, I was trudging up a hill about to be very sick (you should know that I don't drinnk this was just from getting ill) looking back over a year where I split up from a fantastic girl because I'm crap at relationships and am affraid of commitment. A year where I'd thrown myself into my work, not spent anywhere near enough time with friends and family. A year where I'd simply lived day to day on a diet of junk food, coffee and cigs. I was well on my way to a heart attack before 30.  So I decided to turn it around. I quit the junk food, no more burgers or chocolate or pizzas. Joined a gym, much to the ammusement of my friends and tried to generally get my shit together.  Has it worked? I hear you all cry, well I guess that's why I'm shit scared about next year. You see you can do all of this for yourself, and feel a lot better about it, but when it comes to getting out there and trying to be a better you with other people it's a whole other matter. I'm not sure if things are better or not, I guess next year will tell.
     

    
</post>

<date>20,December,2003</date>
<post>

	 
      Top blog from a top guy   urlLink Kieron Gillen's workblog 
     

    
</post>

<date>21,December,2003</date>
<post>

	 
      So here I am, back at work on a Sunday again. Still worrying about next year. Why is it that the changing of a year is sooo important to us all, just the the millenium. None of it should matter, it's just an arbitrary counting system which has been changed a lot of times over the years. But I guess it does matter somewhere deep inside the human consciousness.  I think we have to split up time into chunks just so that it doesn't all bleed into one, and once we measure things we attach meaning to those measurements, even if there is none.  So will next year be the one that changes everything for me? Probably not, yet I will hope. I already know how the year will start, more horrible deadlines at work, just like last year. Come March my nephew will be born, that will be a big change for the family, one for the better I think.  Supposedly one of my friends will finally escape from his parentle home make the move down to London, as he has been threatening to do for 3 years. If he does he will be staying with me for the first two months at least. So that much of next year is certain, but none of it seems too life altering for me. But then you never know do you....
     

    
</post>

<date>30,December,2003</date>
<post>

	 
      The topic that my boss and I most often "discuss" when down the pub after work is that of digital rights management in the music industry. We are both of the opinion that this is impossible, that in the digital age you cannot fully protect music from being copied digitally. This will eventually also apply to movies which currently enjoy the protection of being too big to move around easily, at least for the majority of people.  Recently though I have been thinking about where the music industry should go with this in mind. Quite simple the actual music itself is right now a loss leader for the record labels, whether or not they will admit this even to themselves. They should take advantage of this.  In some ways the movie industry has the advantage over the record labels in that they have saw this happening to them with the advent of TV and video and have taken steps to rectify this. Already it is often the case that a film will make more from DVD sales than from it's release in cinemas.  I believe that the record labels should follow this approach. The should not be affraid of giving away the actual music, and then offering to consumers a product that they actually see value in, because right now people are seeing less and less value in the songs themselves. DVD singles should be the release format of choice, with high definition sound in both Dolby Digital and DVD-Audio MLP format, along with videos, features of the recording sessions, interviews, lyrics and more. All of this material is already created for most singles anyway, and DVD replication costs have come down enough to make this a feasible thing to do.  If the labels take this on board completely, as in the idea of the songs themselves as loss leaders, then they can pre-empt the illegal transfer of music by including mp3 versions of the songs in a DVD-ROM section of the disc. This would go a long way to winning over the hearts and minds of consumers.  Anyway, this is my theory, I'm sure a lot of other people have their own. What do you all think?
     

    
</post>

<date>08,January,2004</date>
<post>

	 
       urlLink Maestro Headquarters   This is geeky cool, a cut down version of the software that NASA use to look at the images from the Mars rover. You can get the first set of images with it and they will be updating the software over the coming months.  I'm a complete space geek, but I've let it slide over the last couple of years, so this has really energised me to get back into it.  In other news, the holidays went well, although I'm really not quite up for 2004 yet, still too much work stuff hanging over my head at the moment. One good thing thought it that me and the lads are off to the School of Rock premiere with Mr Jack Black himself in attendance, next Tuesday. Now if that's not a kick ass way to start the year I don't know what is! :)
     

    
</post>

<date>11,January,2004</date>
<post>

	 
       urlLink BBC - Radio 1 - Chart   So sitting here at work, on a Sunday again. Been in all weekend. Listening to the above, been a long time since I listener to the chart, got some work experience 16 year old presenting it now, or something.  Just me in the office all weekend, going stir-crazy, but Craig is about to drag me out for a quick drink to give me a break. Anyway, things are going quite well. I just tried to call the boss, let him know about the minor success I just had, but I got nothin'! Feeling a distinct lack of support from the company, which might not be totally unfair as it is me that's late on deivering, but it's not all my fault.  Ah well, guess I'll post more later.
     

    
</post>

<date>19,January,2004</date>
<post>

	 
      So the project that absolutetly had to be finished for today isn't. No great surprises there, but we're sooooo close. I hate this part of a project, where you can taste the end but it just keeps escaping you. My bugs list has been hovering at the 70-80 mark for over a week now, but it seems slightly more under control, although that might be because there's not much testing going on at the moment.  So I continue to work, distracting myself a little with news about the NASA Mars missions and Bush's announcement that man will return to the Moon and then go onto Mars by 2020. The geek in me is loving this and really wants it to happen, but then the realist kicks in and I have to wonder if it will come to pass. Remember that Bush Sr said much the same thing. I think this new proposal is more sensible in that Bush Jr isn't asking for pots of cach from Congress which would never happen. The first Moon race being a product of a time that, hopefully, will never return.  I don't hold with all these people who say that too much money is spent on Space and that it could be better diverted. That's just so much bollocks. It's just unfortunate that the benefits of Space activities can in no way be seen as originating from it.  Besides all the rational arguments there's the emotional argument that humans are natural explorers. Whether from curiosity or the innate survival instinct the fact remains. We will one day travel to other planets either because of proposals such as this or due to private enterprise seeing it as profitable.  One thing that people who are debating the latest proposals have not mentioned is X-prize, the competition for the first privately funded, sustainable human launch capability that is looking likely to be won this year or very early next year. Okay this is a small start, most of the projects only shooting for very low ballistic trajectories and not for orbit. But 2020 is a long way away, and once one team wins then someone will start making money from this stuff, then the expansion of the industry will rocket (pun intended)!  So by the end of the year we may have a viable private industry human launch capability, let us think what could private industry accomplish in 15/16 years. Well look at what the computer industry managed to do in it's first 15 years. From laboratory to desktop. The world is an extremely fast moving place at the best (or worst depending on who you are and how you look at such things), but when there is a major new, and untapped, industry to exploit things move fucking fast.  Personally I don't care how it all happens, just so long as I get to go into orbit at the least before I die...
     

    
</post>

<date>27,January,2004</date>
<post>

	 
      For a site that labels itself as "Diary of a frustrated developer" there's very little to do with being a developer (you could see that as a hint to the levels of my frustration). However the following is an article which, as the author points out at the start, can only really be truly understood by computer people with a love of space stuff.   urlLink To Boldly Go ...   I agree with everything said here, and I too have always been astonished at the fact that the original lunar project worked on that level of technology. Although perhapse the author is now regretting quoting Flash memory as something to be used in space missions as it is now looking likely that this is what caused the problems on the Spirit rover!!
     

    
</post>

<date>04,February,2004</date>
<post>

	 
      I LOVE GOOGLE, they are just the best people there, real geeky developers I'm sure. I'd love to meet them. We've been trying to find out what the minimum and maximum values for the Java Date class are.  Turns out they are 2^63 milliseconds either side of 1st Jan 1970, obviously we wanted to know what this would be in years. Mike broke out the Windows Calculator and started to work it out, but on a whim I wondered if the Google caluculator would manage this. So I tried it, see below.   urlLink 2^63 milliseconds in year   God they rock.
     

    
</post>

<date>03,February,2004</date>
<post>

	 
      Why is it that just when you're making a new friend somethings always happens to get in the way. The was a party in the building where I work, and all the companies here were invited. At the party I finally got to meet and get to know the people who, I'm embarrased to admit, actually share our office space.  Normally I'd probably have been the first from my company to make such aquaintances, being the friendly chap that I am. But with the recent madness, 12 hour days 7 days a week, I've been a little off form. Anyway, they're a small company, just the 5 of them and all a great laugh. Well of the two that I was fast becoming friends with one has left for another job and the other is off travelling for a while.  So I'm back to square one, my year of making new friends having started a bit and then stalled again. It always amazes me how are it is to meet new people in a city as large as this.
     

    
</post>

<date>03,February,2004</date>
<post>

	 
      Over the last couple of weeks Microsoft have been showing a lot new Web Service specifications which are intended to extend the functionality of Web Services, such as the latest one below.   urlLink WS-Addressing   While I always think it's a good idea for issue such as this to be tackled and the ideas published for the general community to comment on I have a nagging concern that they are implementing all of this already in their systems.  I've done a lot of work with WebDAV over the last 18 months and have found Microsoft's extensions and freehanded nature with the core WebDAV specification to be quite a problem. Also their lack of follow through, once they'd got things working how they needed there has been little to no work done since.  Obviously there are signs already that Microsoft is treating the Web Services world differently, and better. This type of early publication hasn't happened with such regularity before, however I would still like to know more about their future intentions with these specifications.
     

    
</post>

<date>09,February,2004</date>
<post>

	 
      Yeah......!!!! As of about ten minutes ago I am release complete for the first release tomorrow. This is the first time I've been in this situation on this project, even pending bug reviews.  Partly this is only becuase the boss has let some smaller stuff slide to the next release, but that's not the point. Still a reason to celebrate. So I'm testing for the rest of the day, and hoping that I won't find much else that's wrong.....  Oh what a glorious day :D
     

    
</post>

<date>08,February,2004</date>
<post>

	 
       urlLink Interflora   So I went with the "Body & Soul" tulips in vase (with feathers...hasn't noticed that till just then)....  I panicked a bit last Friday, added to that I was a bit down and the fact that I've not sent a Valentines for 3 years caused a bit of a change reaction. Lucky I could depend on the cynical marketing people at Interflora to enable the impluse purchase funtions on their website. Within 5 minutes I'd booked flowers. They'll arrive in our office on the Friday, she will not be around for the 14th. They are anon of course.  Ah well, can't cancel them now.
     

    
</post>

<date>05,March,2004</date>
<post>

	 
      So life is slowly returning to normal. Haven't managed to get back to the gym yet, bad foot....honest. However, last night I managed to leave work pretty much on time and rent some DVDs which was great. I got LXG and Confidence.  LXG was okay, the effects were well done for the whole. Very strange pacing to the film though. I wouldn't mind seeing a sequel, mostly I like the Tom Sawyer character, which I know will enrage those who lliked the original comics but there you go.  As for Confidence, well I have quite a thing for heist/con movies. The Sting is one of my favorite films. Confidence was good, well acted, however I saw it all coming a mile off, which is a shame. It's about time someone did for the con film what scream did for the horror genre, and start to rewrite the rules
     

    
</post>

<date>29,February,2004</date>
<post>

	 
      Wow, so long time no write. Worth it though. We've finished all the work on the core code, now just a few more days doing the custom code for this project and we're done. I'm finally taking some days off, the first since ... well I can't remember when. The Craig is finally gone from my sofa to a better place, in fact a much better place, I'm somewhat jealous.  So I'm just in the office trying to recover my sense of self from the chaos that is the office move around. Just something to instill fear and uncertainty in the staff. Our CTO is the only person that hasn't change position, so in this case the world really has revolved around him.  Well I'm off now to see my nephew again....
     

    
</post>

<date>29,April,2004</date>
<post>

	 
      So it's been a while since I last posted, a lot's been happening. My two projects have finished their major phases so I'm in a documenting and winding up mode for them and all of a sudden I seem to have grown a social life. I really could get used to this leaving work on time thing.   urlLink java.net: WS-Simplicity? [April 29, 2004]   The above is a link to Michael Champion's latest weblog entry on Java.net. Now you probably already know that I'm loving all things web services at the moment, have for a while. This blog entry in some ways is how I think, although I think he's a little pessemistic about implementation. Necessity is the mother of invention, but also, in developing terms, of implementation. Web services are a great way of "just doing it" in integration projects and so poeple are using them.  However now this technology is appearing on the radar of managers which will inevitably lead to the need for more reliable and secure services. This is why I'm betting that the next part of the WS-* stack to be widely implemented will be WS-Security and WS-Reliable messaging. The Apache project are already moving forward with these as part of their  urlLink WS-FX project , which also includes WS-Addressing.  Developers will tend to the easiest solution, always trying to avoid complexity. Web services are part of that, and a major driver is the availablility of good open source API's such as those from Apache.  Having looked at the Sandesha WS-ReliableMessaging project I am a little concerned that there is no easy way of implementing this into a client app, as it currently requires My-SQL for the back end. I'm sure a quick port to HSQLDB would be a temp fix.  I also think that the work of the  urlLink WS-I  is equally important in moving Web Services forward. However, their more theoretical work needs to be backed up by API's collecting implementations or a more complete WS-* stack toegether, and for all the major languages (at least Java, .NET and PHP). Some body to pull these together, possibly in both client and server packages, and perform interoperability testing between them would be the next step in my mind.  If this was the case, we would then have a stable WS-* stack of both standards and implementations that we could all rely on being at the other end.  As for the rest of the WS-* stack, well I'm not even going near that stuff for now.....well, at least for a couple of months! :D
     

    
</post>

<date>11,May,2004</date>
<post>

	 
       urlLink Google News: van helsing   So I went to see Van Helsing at the weekend. First let me say that I was a massive fan of both The Mummy and The Mummy Returns, so I am very confused that I didn't enjoy VH.  It didn't make me laugh, and I found the story far too convoluted for the type of film that it is.  This could be the dissappointment of this not being the film that I wanted it to be. I was really looking forward to the merging of the three main Universal monsters, something that would take itself just seriously enough but also be fun in the old style.  Ah well....
     

    
</post>

<date>10,May,2004</date>
<post>

	 
       urlLink Datapower Break Gigabit Barrier For XML Processing with its XG4 XML Chip   You see this is the kinda stuff that I like to see. XML hardware, wish I could persuade my company to let us play with this stuff.
     

    
</post>

<date>21,May,2004</date>
<post>

	 
      Date entry, the never ending story...   urlLink DateFormat (Java 2 Platform SE v1.4.2)   So I'm starting a little mini project today, rebuilding the date entry field for our swing application. I think this is the fourth time I've rebuilt this one. First there was the simple text field with post entry validation. Then a 3rd party date widget with the calendar view. Then the Java 1.4.3 formatted text field.  None of these have appeared to meet all of our requirements. There's always something someone doesn't like about a calendar view, even with large number that we've tried, plus they don't always fit in well with the layout. The formatted text field does have many problems for people, it's not very intuitive and many look and feels still haven't got it implemented correctly.  This time I'm starting from scratch, gethering requirements, good examples of what people want.  It's strange that this is the one part of the interface that has faced so many problems, you'd think it would be simple. It has been a bit of a case of problem avoidence, thinking that this must be a problem that someone else has solved in a way that works for us.  This is way time estimations can be thrown so far out of whack. Would you have seen this as being a major problem? Oh well, it could be worse, I could be implementing one of my collegues ideas for date entry based on concentric circles!
     

    
</post>

<date>20,May,2004</date>
<post>

	 
      Optimisation update...  So we're still improving on our optimisations from the other day. I've been doing a bit of a postmotem in my head about how we got into this situation.  At the core our code is five years old, has been optimised and works extremely well. Our problems have come from adding a new layer over that code. In this case a WebDAV implementation, for communications with the administration application. Now WebDAV specifies oppourtunities for optimisation of the protocol, for example you are able to ask for a partial set of a resources properties.  Well the WebDAV optimisations didn't quite fit with our model and so we were getting all the properties each time, planning on fixing this later....it got forgotten.
     

    
</post>

<date>19,May,2004</date>
<post>

	 
      Bonuses, motivation and managing people.   urlLink Why salary bonus and other incentives fail to meet their objectives   Picked this up from  urlLink  Keith Pitty's  weblog. Interesting article, and a subject that is much debated here. Our company has always given healthy bonuses, but one I've not felt that directly linked to my work. Our evaluation processes have changed many times as well, pretty much always for the better.  I have to say that while I think most developers will to some extent agree with the concepts of this article, very few will want to see them implemented. You see there are, and always will be, developers who are mearly doing this as a job, and you cannot dismiss them as bad developers and many are very good.  Traditionally our company has employed young people with very few comitments, this has led to a team who are willing to put in the hours and give, perhapse, too much of themselves to the job. This is now changing as the company grows up, and therefore our policies on rewards will have to change. We now have people who value holiday far more than I, and therefore are not happy with our relatively low holiday allowance. There are people who will never work much overtime as they have responsibility to families, a very new thing for our company.  All of these people will have differing views about what they want from the company, and I suspect many will be more than happy for a bonus scheme to continue.
     

    
</post>

<date>18,May,2004</date>
<post>

	 
      Optimisation... more thoughts.  I posted yesterday about the importance of optimising your code, something that is often done as an after thought (we're just as bad as this). Well it got me thinking on my way home last night.  Currently I am rewriting the development process for my company. This is something that's never been done as a formal excercise here, and it's harder than you might think.  It's not like we have no development process and it's all chaos, not at all. The process has evolved over the last 5 years. But no one has sat down and tried to pull all the threads together into a cohesive whole and bring in new best practice from outside.  The reason I'm talking about this is that while I was bemoaning the fact that people don't have planned optimisation periods in their development plans, I hadn't yet thought about this in the one I was writing.  As part of the rewriting the process I have been reading  urlLink Java Extreme Programming Cookbook  by Eric M. Burke and Brian M. Coyner. In this they talk about  urlLink JUnitPerf . While this canot do all your performance monitoring, and you should still have a period of optimisation, I do think that this should be the foundation of an early warning system for you.  I'm going to add this to our development process document, and I'll let you know how it goes. Would be good to know if anyone else had ideas about this.
     

    
</post>

<date>18,May,2004</date>
<post>

	 
      So there's another Swing debate going on at Java.net. AS one of the people posting points out there are many such debates going on all the time.   urlLink java.net: Swing Usability [May 19, 2004]   I guess I don't have that much of a problem with swing, see  urlLink my comments  on the matter.  What does amaze me though is how Java developers do seem to struggle with it. What does this say about the current state of the development community.  It is perfectly possible to create decent Swing apps, just check out the ones selected for Sun's  urlLink Swing Sightings  column. I'm really proud of our client application, especially since I didn't know any Swing before I started it. (I'll post a link to the demo as soon as it's up)  Swing is after all just an API to be used, it isn't that complicated, just big. Most Swing guides give an overview, but they focus on the MVC aspects of Swing. I suspect that this isn't quite how most Java developers will work. People very quickly break the MVC architecture, and that's not always a bad thing. The other side of this is that I know a lot of Computing graduates wouldn't have a clue what MVC is, which worries me even more.  So I'd like to share my 2 top practical tips, the things I learned in my adventures in Swing:  1) Develop your own components.  Do not be affraid to customise and aggragate components into something that is easily reusable for you. This will help you test at a lower reused level, and keep the look and feel of you application consistent if you reuse these components.  2) Build your own layout managers for anything slightly more complicated.  After I'd bitten the bullet and built my own layout manager for one very complicated component I didn't stop. Most all of the components that aren't simple containers now have their own layout managers.  I guess that's it. Only two tips for now, but they are just about the most important two that I learned.
     

    
</post>

<date>18,May,2004</date>
<post>

	 
       urlLink javaperformancetuning.com review of Borland Optimizeit.   So it's been a few days of performance tuning for the development team here. We're still a bit reactionary with this, and the latest bout was triggered by the 15 minutes it took to load a collection of resources in the administration client, there were only 726 resources and all we wanted was basically a directory listing.  So we started looking into it, I fixed a stupid part of the client application which made an extra call to the server for every resource listed. The call was safely moved to an as needed call rather than being preemptively made. The rest of the team started looking in the server code. For this they were using Optimizeit. Now I'm not one for recommending commercial products much, only when I find them to be of excellent quality and usefullness.  Very quickly serveral bottle necks were located in the code, mostly through massive object creation and garbage collection. We've now got the server and client screaming through that very collection load at a healthy   Lesson to be learned, make sure you look at your running code for possible optimisations. There may be more than you think, and there's no better feeling than seeing your code fly.
     

    
</post>

<date>28,May,2004</date>
<post>

	 
      The ongoing DateField component saga....  So I'm still working on building a new date entry field for out swing application. I do like have a small constrained problem like this, especially one that can be built completely out of the main development pipeline.  While as "good" developers we always want to build reusable components with fantastic public APIs that are self documenting and completely consistent, we don't often have the time to do this. My current date field project is one of those rare occasions when I find I have the time and the scope to be able to do just that. What I am finding though is that it's much harder than you would think.  How often do you, on your own, get to practice the art of producing perfectly atomic components? Well I don't know about you, but this is rare for me. You cannot rely on specific usage senarios. This is made even more difficult by the fact that this is a Swing component, inheriting off of JTextField, so I am having to consider what functionality from the super class I am going to support, and therefore have to test and maybe override to make safe for use in this context.  Whatever your feelings on this, perhaps you think that I am just stupid and that this should be a no brainer, I am finding this an amazingly useful exercise. It's setting me thinking about how I programme, in a way that is unusual for me, and really, no matter how that happens, surely that is a good thing.  -----------  On a side note, I realise that yesterdays post about Web Service interoperability went off on a bit of a tangent, but I am going through one of those phases where a concept is stuck in your head and just keeps poping up at you from all over the shop.  The idea of programming to surfaces, nebulus though that statement is, just keeps on appearing. While I wrote about the ideas of Jaron Lanier, what I also realised is that this is linked to the ideas about the brain that Steve Grand puts forth in his book that I also wrote about yesterday.  I have this annoying little itch in the back of my mind that keeps making me think that there is something important in this idea, but I just cannot figure out what. Any suggestions more than welcome, comment away.....
     

    
</post>

<date>27,May,2004</date>
<post>

	 
      Web Services Interoperability...  Here is a great article discussing exactly what "Web Services Interoperability" means and the role of  urlLink WS-I .   urlLink WebServices.Org - The Web Services Industry Portal - Interoperability: the Key to Web Service Quality   I was particularly taken with the line;  "Interoperability needs to happen at all levels of the Web services protocol stack for a Web service to be certified as "interoperable".  From my perspective there are still too many manual stages in the usage of Web Services, still too many places for human error to creap in. We are still a long way off of complete automation, and standards such as  urlLink Web Services Metadata Exchange  will help.  Looking even more forward into the future I can see a lot of applicability for the theories of Jaron Lanier, see  urlLink this interview . I can see the WSDL and WS Metadata being the basis for the surfaces that he talks about, and UDDI could form the landscape on which the surfaces lie.  However that is a long way off, and in the mean time we need to work towards much better interoperability for simple web services.
     

    
</post>

<date>27,May,2004</date>
<post>

	 
      Some of you may have read James Gosling's weblog entry   urlLink "The world needs more crazy people"  this month. It stuck in my mind, as I agree with him whole heartedly.  I've been off sick for the last few days, but I've had a great book to keep me company.  urlLink Growing Up with Lucy: How to Build an Android in Twenty Easy Steps  by  urlLink Steve Grand . If you've never heard of Mr Grand, well quite franckly I wouldn't be surprised. Basically he's a quite insance guy who has spent the last few years dedicating himself to research into artificial intelligence/life. He works on his own, in his garage, and yet has built one of the most advanced research robots in the world.  He also happens to be a greate popular science writer. Good books are those that pose questions, great books are those that make you pose your own questions. This book is of the latter variety. I recommend this to anyone that needs some inspiration to strike out with their own crazy ideas.  
     

    
</post>

<date>03,June,2004</date>
<post>

	 
      Java date problems follow up...  Some kind, anonymous, soul just posted this link in a comment on yesterdays post. It's a good article generally on Calendar, and explains some of the history of Java and dates. I especially liked the following.   urlLink International Calendars in Java :  "You would think that when we deprecated most of Date and added the new Calendar class, we would have fixed Date's biggest annoyance: the fact that January is month 0. We certainly should have, but unfortunately we didn't. We were afraid that programmers would be confused if Date used zero-based months and Calendar used one-based months. And a few programmers probably would have been. But in hindsight, the fact that Calendar is still zero-based has caused an enormous amount of confusion, and it was probably the biggest single mistake in the Java international API's."   Thank you to whoever posted that.
     

    
</post>

<date>02,June,2004</date>
<post>

	 
      Dates in Java.   urlLink Calendar class   Can anyone tell me why the Calendar class and the SimpleDateFormat class have so little to do with each other. For this uber-date selector widget that I'm producing I am using a date formatting string, based on SimpleDateFormat's, to tell the control what and how to display, I am also using a Calendar object to deal with the date arithmetic, i.e. rolling from 31st of December to 1st January in the next year.  I've had to build my own date format parser, because there is now way I can find to extract useful information about the date format string from SimpleDateFormat and absolutely no way to get useful textual descriptions of dates out of the Calendar without formatting a complete date.  What is worse is things like the Calendar returning int 0 for the value of January when getting the value of hte month field. I can understand that this is an index of the date, but this is not how any of the other fields work, and quite frankly my view on the matter is that 1 should be  value  of the month field for January.  Well I've gotten around most of these inconsistencies, for a start my date selector only deals with numerical representations of dates for now. I've created a calendar adaptor which sorts out the month offset problem and also now has get and set field value by string methods, which nicely handles the Era problem, BC=0 and AD=1.  I know that some of these issues are specific to the type of problem that I'm dealing with, but I am sure some of you must also have come across these. I had a scan through the Java bug database for Calendar bugs, but there were far too many to go through looking for these ones.  Dates are a big problem, one of the most recurring problems I have to deal with, but the Java core should be better than this. I won't tell you what we did when storing dates in the database, that's just evil!! ;)
     

    
</post>

<date>01,June,2004</date>
<post>

	 
      Swing interfaces, how do you implement yours?  I spent late Friday afternoon moaning about how, while extending JTextField, I couldn't consume character key presses before they were entered into the text field. Well of course you can, I was just being particularly stupid....it was Friday after all.  I had implemented the KeyListener interface, but only fulfilled my usual keyPressed method, which obviously gets called after the text field has dealt with text keys. After I'd realised what I'd done it got me to thinking. I have gotten into habits when implementing interfaces that I use a lot. For example, when constructing a new Swing component I also implement the LayoutManager interface, fulfill the layoutContainer method, call onto getPreferredSize from both min and max layout size methods and do nothing in the add and remove layout components. I then override the getPrefferedSize method to ensure I don't get into any infinate loops.  This works for me, but my concern is that I don't realise that this is what I'm doing any more, thus leading to the potential for such gotchas as the KeyListener problem. Well it's one to remember at any rate, and I made myself look soooo stupid over this one that I'm not going to forget it in a hurry. At least I can be thankful that ActionListener only has one method!
     

    
</post>

<date>10,June,2004</date>
<post>

	 
      Web services stacks  I've been following the Apache Web Services mailing lists of late and there is interesting talk of them release a Web Services Pack, as an alternative to Sun's.  This is great news, I think. However what we need is some nice independant group to do interoperability testing for these. Which I think should be part of the WS-I remit. Surely it would be easy for them to set up their Basic and Security profile tests using each of the stacks and cross-test them.  Personally for completness sake I would like this to extend to other languages, such as PHP, C/++ etc. As a developer I want to know which specifications I can use without cutting off people using other languages, for example which languages and implementation stacks have WS-ReliableMessaging implementations and are they compatible.  I'd really like to see a set of flexed aggregations of Web Service implementation stacks pulled together that implemented as much of the standards stack as they could across  all  implementations. This should be cross-tested, WS-I tested and offered in two variants, server and minimal client (so for example the server Reliable Messaging layer would use a RDBMS and the client would have an in-memory embedded db) to keep client application distributions small.  Well this is the web service nirvana that I dream of, what do you think.
     

    
</post>

<date>09,June,2004</date>
<post>

	 
      Programmers as artists  We often have this debate with non-programmers, trying to explain to them that we really are artists. For us it started with a comment in a team meeting from me about refining code being like sculpting, as Michelangelo put it;  "The best artist has that thought alone Which is contained within the marble shell; The sculptor's hand can only break the spell To free the figures slumbering in the stone"  Our Director of Technology then suggested that actually we are like poets, trying to find the most succinct way to express something.  Therefore, we are always glad when we find someone else who agrees with our concept of the programmer as artist, such as the following.   urlLink Hackers and Painters 
     

    
</post>

<date>08,June,2004</date>
<post>

	 
      House style for GUIs.  Slight detour from the usual stuff directly about Java, but one of the things I've been thinking a lot about lately is having a house style for GUI applications. There is a real pay off in terms of recognition, as long as people like it.  The best example of this is Apple's brushed metal style. You can spot an Apple application from half way across an office, especially if it's running on a PC.  I've just started using Napster for downloading legal music, and the look and feel of that is very much all it's own. However both of these examples are good because they are not "in your face" about it.  To the degree that we can, we've been developing a house style, but there's still a ways to go. But it's something to think about.
     

    
</post>

<date>07,June,2004</date>
<post>

	 
      JDesktop Integration Components (JDIC)...  I was over the moon when Java.net launched the  urlLink JDIC (JDesktop Integration Components)  project.  Our administration appilcation acts in some ways like a remote file explorer, and so is required to open files in the appropriate application.  Well I've bodged this in Windows by calling:   Runtime.getRuntime().exec( "rundll32 url.dll,FileProtocolHandler file:/" + filePath;   Luckily we don't have a drastic call to make the app cross-platform, but then this is Java so it basically offends my sensibilities that it isn't. JDIC seemed like just the ticket, except for one thing.....  ...the one  other  platform that is of importance to us is Mac OSX, which is the one major platform that JDIC doesn't cover. I've been trying to think about why this is the case. The only answer that I've managed to come up with so far is that Sun started the project, and the covered platforms match up with those that Sun directly offers for Java, Apple producing the Mac OSX version of Java.  Anyway, these guys are desparately in need of all the contributors they can get, so I'm putting a plee out there for Mac people to contribute. To tell you the truth I wouldn't be surprised if Apple put some people behind this. I'm definately going to prompt the Mac fan in our office.  If you think you can help, please do.
     

    
</post>

<date>07,June,2004</date>
<post>

	 
      Date field saga ends...I think.  I've finally completed the Date field, well to what I think is complete. My boss comes back off of holiday tomorrow so he'll have the final say about it.  I'd like to thank all of those people who posted comments about it, they were all very helpful.  I wish I could say that I was totally happy with it, but I'm not. It has restrictions. I'm using the SimpleDateFormat format strings to tell it how to display, but there are restrictions. It will only accept format strings that are eauals in length to the input data (e.g. must be 'yyyy' not 'yyy' or 'yyyyy' which the SimpleDataFormat class will accept as a 4 digit year). It will only work with numerical representations of dates, so no 'Jan' or 'January' or 'Monday' etc.  I know how all of this could be done, but I'm just out of allocated time on this mini project which is annoying. But hey ho, that's the way it goes I suppose.  So I'm now implementing it through out our applications, replacing my last attempt at a date selector. Then it's back onto the Development Process document that I was working on.  Thanks again to all those who helped.
     

    
</post>

<date>16,June,2004</date>
<post>

	 
      XSLT sorting on dates  Roll on XSLT v2 is all I can say. First off, I've not blogged for the last few days due to a sudden and rather large amount of work, which was not Java or XML related, so I didn't have that much to post about. However today we got a query from a licensee of our technology. I'm not going to go into masses of detail about our technology (mostly because it's not that interesting) but needless to say at the end of hte pipeline it produces output (HTML, TEXT, XML, PDF etc) by passing the output XML through XSLT.  This licensee was asking (read moaning!) about that fact that data information came out in the XML as either "YYYY-MM-DD G" or similar with a time on the end. For those of you who may not recognise it the "G" is the Era, i.e. "AD" or "BC". He said he couldn't do any sorting on it in the XSLT.  One of my biggest issue with people is when they ask for help without even trying to find the answer themselves, I judge this by how long it takes me to find the answer....  ...10 minutes with the excellent  urlLink Zvon XSLT Reference  and Stylus Studio and I had all dates ordering correctly with only 9 lines of XSLT. You can imagine the  curt  yet polite response to the licensee.  Still, all of this sort (no pun intended) of thing will be a lot easier when XSLT v2 is available, however I do think that will be a long time coming. After talking to Michael Kay, creator of  urlLink Saxon  and Jacek R. Ambroziak creator of XSLTC at Sun and now the  urlLink Gregor/XSLT compiler  at XML Europe last year, XSLT v2 sounds like it will be much harder to implement and more importantly optimise in XSLT processors.
     

    
</post>

<date>25,June,2004</date>
<post>

	 
      Sad news, Bob Bemer developer of ASCII has died. :(   urlLink Key computer coding creator dies 
     

    
</post>

<date>24,June,2004</date>
<post>

	 
      I don't like breaking code that works....  Okay, so that's probably a pretty obvious thing to say, but I think it's turning into a debilitating disease. You see there's a new feature that I've got to add into the client code, I know that it's going to be a complete pain in the arse to add as it is a very special case. So basically I know that it's going to break things for a while till I've managed to get it working properly.  Obviously this code isn't going to go anywhere until it's working, I know that. I know that I'm the only person that is going to have to suffer an application that doesn't work properly, yet somehow this does not help me. I still don't want to start this work.  I think this stems from a general fear I had of breaking things when I started in this company, back in the dreaded old days when the didn't have   version control  ! Yes I know! So we were constantly breaking things, obviously. A team of three working on the same code without version control, what else is going to happen.  I was chatting about these good old days with a friend who worked here back then. He's since run off back to acedemia (it was that scary at the time), but it's nice to chat about it with him. Gives me some perspective on how much better things are now.  Well I suppose writing this is just another way to put off the enevitable....maybe a quick smoke first... ;)
     

    
</post>

<date>24,June,2004</date>
<post>

	 
      Self-publishing.  Some time ago I read this article on Java.net.   urlLink My adventure in Self-Publishing [June 24, 2004]   I was interested in these experiences, perhapse thinking about the future. The reason I bring this up now is that a friend of mine is trying self-publishing for comics.   urlLink The Variance Anthology   They are using the  urlLink Cafepress.com  system, which is publising on demand. There are no up front costs. There are currently only 8 books in their programming section so there might be a gap in the market for the entrepreneurially minded.
     

    
</post>

<date>02,July,2004</date>
<post>

	 
      Do you UDDI?  Ther have been many articles over the last few months about people not using UDDI, in fact apparently (according to most of these articles) people are not even  thinking  about using UDDI.  I find this most interesting. I for one agree with those people that believe any moves towards a Service Oriented Architecture must include the implementation and use of UDDI. If I were dictating terms for an SLA to go to consumers of a service that my company provided I would insist that part of that agreement forced them to do dynamic UDDI look ups for finding the endpoint to bind to.  Doing this gives the provider much more freedom in provisioning the service and the consumer can be much more certain that a service is not going to be interrupted for a silly reason such as moving location.  I've worked on large web service implementations for Government projects and have been astounded that UDDI is not being used at a project level at least. I am even more astounded that there appears to be no plan at all for Government to implement a centralised UDDI server.  A lot of extremely good work is being done on web services, and use of XML and metadata etc, generally within the UK Government so I am amazed at that this does not appear to have been raised at all.  Now I should point out that I don't have direct access to the powers that be within eGov over here, so I may be missing something. Perhapse this has been looked at and discounted, maybe it is in the works (although I would have thought it would be here now or that I would have heard if this was the case)>  Perhapse the fault should lie with the UDDI vendors themselves? I don't know I've never tried to purchase a solution, because none of our clients have asked for one. I have a sneaky suspition that some of the blame should lie with the API people, as there is nothing I can see in the Web Service APIs I've used which actively encourages this practice. I just don't know.  Perhapse there is too much bad association with the UBR, which I really believe was doomed to failure from the moment the concept was started.  I would be very interested in others thoughts on this matter, so please post away.   urlLink Dynamic Discovery and Invocation of Web services 
     

    
</post>

<date>01,July,2004</date>
<post>

	 
      Been ill...  Actually I've been off of work for the last couple of days due to a mix of tube strike and feeling ill. Will be back online next week.
     

    
</post>

<date>16,July,2004</date>
<post>

	 
      Went to a LemonJelly gig last night...  First gig in a while and the second time I've seen LemonJelly live. Had a really great time, hope eveyone else that was there (Somerset House in London) did too.   urlLink Lemon Jelly 
     

    
</post>

<date>13,July,2004</date>
<post>

	 
      The return of the DateField...again!  So the date field has a fatal flaw. You might remember my description of the component that I create including a restriction that for each date block, year or month etc, the intended input must match the length of the format. For example for months the format should be MM and it will expect 2 digits.  The unexpected problem is that in a project we are doing for a museum we have dates going back to 50,000 BC....bugger. 
     

    
</post>

<date>21,July,2004</date>
<post>

	 
      Our WebDAV love affair?  A while ago my company met WebDAV, we spied it across a crowded room and knew instantly that it was the technology that we want to be with, forever. Thus followed a whirlwind romance and a very quick marriage.   Now we have been together for 2 years and the honeymoon is definitely over, but unfortunately we've had kids and now divorce seems as problematic as trying to work around our issues. We have a mistress on the side, SOAP Web Services, to provide what is missing from our relationship with WebDAV. What is to be done.   At this point I should make sure that you understand that I am in no way having a go at the people who have worked tirelessly to bring the WebDAV family of specifications to the point that they are at now. The work they have done is great, on a standard that doesn't have anywhere near the support that it should and one that has been implemented in a bad way many times.   The IETF WebDAV group began officially on March 20th 1997, there is now the core WebDAV specification, DeltaV versioning extensions specification, Ordered Collections, Access Control Extensions and the in progress DASL Searching specification. Pulled together these form, on the surface at least, a well rounded set of specifications, however 2 years is a long time to get to know something.   We started working with WebDAV because our company had instituted research days, once a month, for all the developers. We each got to try out new and interesting things as long as they were something to do with what we do, which is build online information systems with a heavy focus on use of metadata. One of our developers was exploring the idea of layer new interfaces onto the CMS aspect of our server software. He got FTP working, then Telnet and finally tried out WebDAV.   It was a good fit, we have resources to which we allow people to attach metadata, which is exactly what WebDAV gives you. Straight away we ran into 2 problems, the first was that there is no way in WebDAV to supply to the client application the definitions for each of the properties. Secondly there is no agreed way to pass around multiple values for a property. A property can simply contain  &lt;xs:any/&gt;  element.   So we designed extensions to WebDAV for this, which worked well, and completed the implementation of the core specification. We skirted around having to implement the immature versioning specification by simplifying the view over our versioning and relating these through metadata. We used the HTML &lt;ol/&gt; and &lt;li/&gt; constructs for the multiple values, which was a work around proposed by the Dublin Core group. This was the basis for our first release.   Since then we have gone on to expand on the metadata definitions extension, we've move the multiple values constructs over to using the SOAP specification array concepts and implemented DeltaV versioning, Ordered Collections and DASL searching.   To a degree all of this has worked. I say to a degree because there are problems with these specifications. You need only look at the changes in the recent revision to the core specification to begin to understand how much needed clarification. There is not enough integration across the specifications, our implementation of the DeltaV specification had to skirt the lines across 2 of the different implementations flavours to be able to lay on top of our versioning system, which isn't that unusual.   There are missed opportunities, such as the lack of a definition of what a Principal is. In the LOCK specification the lock owner is a URI to information about this user. In the versioning specification there is also talk about users and URIs to information about them and finally in the Access control extension there are Principals, with WebDAV paths to them. However these Principals, and the WebDAV path/URIs, are in no way specified as being the same as the other user URIs. We have assumed this, and gained so much more out of it.   User handling is perhaps the area of greatest weakness, there are others mostly stemming from the specifications not quite explaining things enough (could of course just be me being thick). But yes, user handling is the worst, again not really WebDAV's fault, mostly from the awful way in which HTTP authentication works. We have ended up plugging these gaps with Web Services.   So I guess my advice is that WebDAV worked well for us, it got us up and running fairly quickly without having to design a comms protocol ourselves, but we have spent a long time tailoring and extending it to meet our exact needs, generic though it is you just cannot use it as the sole protocol for an entire system even though it might look like you can at first.   WebDAV and us will not be getting a divorce anytime soon, but I will definitely think twice the next time my eyes meet those of such a lovely technology across a crowded room! 
     

    
</post>


</Blog>