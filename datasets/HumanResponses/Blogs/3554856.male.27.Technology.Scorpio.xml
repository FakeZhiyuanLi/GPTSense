<Blog>

<date>05,June,2004</date>
<post>

	 
      Wow, I did not know it would be so difficult to spend time on a cloomy day as today. I finally found something to so. This blog is my first one, a result of continues idleness for more then 10 hours. I am here at one place doing nothing. If only I know that spending time is so difficult....    - Rahul Ramachandra
     
    
</post>

<date>15,July,2004</date>
<post>

	 
      This is a simple java mail program.  The "smtp.host" string should be initialized with SMTP HOST  The "smtp.from" string should be initialized with FROM Address.    Sample Code    /**  *  Title: Mailer    *  Description: A standalone email program which shoots out emails based on the  *  parameters from app.properties file   *  Copyright: Copyright (c) 2004   *  Company: Bank of New York   * @author Rahul Ramachandra  * @version 1.0  */  import javax.mail.Message; import javax.mail.MessagingException; import javax.mail.Session; import javax.mail.Transport; import javax.mail.internet.MimeMessage; import javax.mail.internet.InternetAddress; import java.util.Properties;  import com.bny.ctir.util.AppProperties;  public class Mailer {    /** String initialized with SMTP HOST **/   private static final String HOST = AppProperties.getProperty("smtp.host");    /** String initialized with FROM Address **/   private static final String FROM = AppProperties.getProperty("smtp.from");    boolean debug = false;    public Mailer() {   }    public void postMail(String recipients[], String subject, String message) throws MessagingException {       String from = FROM ;     //Set the host smtp address     Properties props = new Properties();     props.put("mail.smtp.host", HOST);      // create some properties and get the default Session     Session session = Session.getDefaultInstance(props, null);     session.setDebug(debug);      // create a message     Message msg = new MimeMessage(session);      // set the from and to address     InternetAddress addressFrom = new InternetAddress(from);     msg.setFrom(addressFrom);      InternetAddress[] addressTo = new InternetAddress[recipients.length];     for (int i = 0; i        addressTo[i] = new InternetAddress(recipients[i]);     }     msg.setRecipients(Message.RecipientType.BCC, addressTo);      // Optional : You can also set your custom headers in the Email if you Want     msg.addHeader("MyHeaderName", "myHeaderValue");      // Setting the Subject and Content Type     msg.setSubject(subject);     msg.setContent(message, "text/plain");     Transport.send(msg);   }     public static void main(String[] args) throws Exception{     Mailer testMailer1 = new Mailer();     String recipients[] =  {"rramachandra.bankofny.com", "rahulmr2talk@yahoo.com", "jgupte@bankofny.com"} ;     String subject = "rramachandra.bankofny.com" ;     String message = "rramachandra.bankofny.com" ;     testMailer1.postMail(recipients, subject, message) ;    } }    - Rahul Ramachandra 
     
    
</post>

<date>12,July,2004</date>
<post>

	 
       Problem:   Erratic behavior of file operations. Copying of file from one directory to another does not seem to work.    Current System:   In the program, a block of code is used to copy file from one dir to another dir using java runtime. Another block of code is used to delete files from source dir.   Cause:   Since runtime runs on a separate thread, there does not seem to be any synch mechanisms between the two blocks of code.   Solution:   Insert "process.waitFor()" in the copy block. This causes the runtime to finish copying and then return to the main thread. Deleting the source after this does not have any adverse affect.   Sample Program:    private static final String DOS_COPY_COMMAND = "cmd.exe /c copy ";   /**    * Copy a file from source to destination using DOS' copy command    *    * @param source source file name    * @param destination destination file name    * @throws IOException    */   public void fileCopy(String source, String destination) throws IOException, InterruptedException  {      String copy = DOS_COPY_COMMAND + source + " " + destination;     System.out.println(" Command to create a copy : " + copy);     Runtime run = Runtime.getRuntime(); //get a handle on the current OS runtime     Process copyResult = run.exec(copy); //execute the OS cmd, gives handle on the Process     copyResult.waitFor() ;   }     /**    * Delete a file using DOS' del command and the specified file name    *    * @param fileName file to be deleted    * @throws IOException    */   public void deleteFile(String fileName) throws IOException {      String del = fileName;     System.out.println(" Command to delete a File : " + del);     File file = new File(del);     file.delete()  ;   }    // In main program      try {       cmd.fileCopy(source, destination);       cmd.deleteFile(source) ;     }catch (InterruptedException ie){       logger.error(" Error while wait : " + ie.getMessage()) ;     }catch (IOException ioe) {       logger.error(ioe.getMessage(), new IOException(ioe.getMessage()));     }    - Rahul Ramachandra
     
    
</post>

<date>12,July,2004</date>
<post>

	 
       Problem:   Cannot deleate files via file.delete();  1. It throws no exception. 2. All input data with respect to the file is correct.   Sample program:    String[] fileList = new File(toDir).list();  for(int j = 0; j    try{     if(!fileList[j].endsWith("zip"))     new File(fileList[j]).delete();   }catch(Exception e)  {     System.out.println("Error deleting file." + fileList[j]);     continue;   } }     Solution:   Opening a FileInputStream and never closing manually. A simple mistake but one that can be hard to catch when you have got 10 different streams opening and closing at different points in the program.  Check for all the open Streams.   - Rahul Ramachandra 
     
    
</post>

<date>03,August,2004</date>
<post>

	 
        Question:      How do I prevent the output of my JSP or Servlet pages from being cached by the browser?     Solution:        You will need to set the appropriate HTTP header attributes to prevent the dynamic content output by the JSP page from being cached by the browser. Just execute the following scriplet at the beginning of your JSP pages to prevent them from being cached at the browser. You need both the statements to take care of some of the older browser versions.   Code Block:          response.setHeader("Cache-Control","no-cache"); //HTTP 1.1      response.setHeader("Pragma","no-cache"); //HTTP 1.0      response.setDateHeader ("Expires", 0); //prevents caching at the proxy server    If the above fails, try changing the first line to   Code Block:   response.setHeader("Cache-Control","no-store"); //HTTP 1.1    The difference between no-cache and no-store is a bit dodgy, but apparently no-cache is the more polite keyword.  However, please note that there are some problems with disabling page caching under IE 5.0 due to the unique buffering requirements of the browser. Please see the Microsoft knowledge base for details:   urlLink http://support.microsoft.com/support/kb/articles/Q222/0/64.ASP   urlLink http://support.microsoft.com/support/kb/articles/Q234/2/47.ASP    - Rahul Ramachandra 
     
    
</post>


</Blog>