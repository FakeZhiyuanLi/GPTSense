as a former c programmer, to me '\n' means platform-independent new-line character. the compiler will convert it to whatever real new-line sequence used in the target system. i had expected '\n' in java to be interpreted by jvm the same way. however, it is not. \n always means unix-style new line \r always means classic mac-style new line if you need windows-style new line, use \r\n if you want new line of the platform the program is running, use line.separator or methods that use it, such as println() or newline() useful if i ever want to creating unix-readable text file on windows platform, etc.